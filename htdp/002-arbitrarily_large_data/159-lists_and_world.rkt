#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.9 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 76 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 795 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 189
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname 159-lists"
 #"_and_world) (read-case-sensitive #t) (teachpacks ()) (htdp-settings "
 #"#(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 14 #"; Exercise 153"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"2htdp/image\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"2htdp/universe\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"RED-DOT"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"SQUARE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"  "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"NLINES"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"NCOLUMNS"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; N Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; consumes a natural number n and an img and produces a column of n "
 #"imgs"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"col"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 3 #"img"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #" ("
0 0 14 3 3 #"col"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; N Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; consumes a natural number n and an img and produces a row of n img"
 #"s"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"row"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"Not a positive number\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"image?"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"img is not an image\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 3 #"img"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #" ("
0 0 14 3 3 #"row"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 2 #" ("
0 0 14 3 3 #"col"
0 0 24 3 1 #" "
0 0 14 3 6 #"NLINES"
0 0 24 3 2 #" ("
0 0 14 3 3 #"row"
0 0 24 3 1 #" "
0 0 14 3 8 #"NCOLUMNS"
0 0 24 3 1 #" "
0 0 14 3 6 #"SQUARE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"EMPTY-SCENE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 3 #") ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 11 #"EMPTY-SCENE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; A List-of-Posn is on of:"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; - (cons Posn '())"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; - (cons Posn List-of-posn)"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; interpretation: collection of posn"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-ballons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 0 19 3 31 #"\"x coordinate is out of bounds\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-ballons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 0 19 3 31 #"\"y coordinate is out of bounds\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-ballons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 6           4 21 40068
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 80 0) #(struct:po"
 #"int 80 180) #(struct:point 0 180)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 45 28 #(struct:translate 5 5 #(struct:elli"
 #"pse 10 10 0 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 80 0) #(struct:point 80 180) #(struc"
 #"t:point 0 180)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #"
 #"(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0"
 #" 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #("
 #"struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(s"
 #"truct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0"
 #")) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)"
 #") outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0))"
 #" outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) o"
 #"utline \"black\"))) #(struct:translate 10 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))))))))))))))))) #(struc"
 #"t:translate 0 10 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 "
 #"0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 "
 #"0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0"
 #" 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 "
 #"0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 "
 #"10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0"
 #") #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 1"
 #"0 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0)"
 #" #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) "
 #"#(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 "
 #"0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #"
 #"(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0"
 #" 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))))))))))) #"
 #"(struct:translate 0 10 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #" 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 "
 #"0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0"
 #" 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 "
 #"0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 "
 #"0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\")))))))))))))"
 #")))) #(struct:translate 0 10 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 1"
 #"0 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\")))))))"
 #")))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 1"
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 "
 #"0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\")"
 #")))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tra"
 #"nslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tran"
 #"slate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:trans"
 #"late 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transla"
 #"te 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translat"
 #"e 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"bl"
 #"ack\"))))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(stru"
 #"ct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struc"
 #"t:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0"
 #") #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct"
 #":translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:"
 #"translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:t"
 #"ranslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tr"
 #"anslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tra"
 #"nslate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pul"
 #"led-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outlin"
 #"e \"black\"))))))))))))))))) #(struct:translate 0 10 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) "
 #"#(struct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10"
 #" 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #"
 #"(struct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #("
 #"struct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 1"
 #"0 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(s"
 #"truct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(st"
 #"ruct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 "
 #"0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(str"
 #"uct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(stru"
 #"ct:translate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"outline \"black\"))))))))))))))))) #(struct:translate 0 10 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point"
 #" 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black"
 #"\"))) #(struct:translate 10 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point "
 #"0 0 10 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #" 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))))"
 #"))))))) #(struct:translate 0 10 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))"
 #"))))))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transla"
 #"te 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translat"
 #"e 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 1"
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point"
 #" 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black"
 #"\"))))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:"
 #"translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:t"
 #"ranslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tr"
 #"anslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tra"
 #"nslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tran"
 #"slate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:trans"
 #"late 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled"
 #"-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))))))))))))))))) #(struct"
 #":translate 0 10 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0"
 #" 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 "
 #"0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 "
 #"10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0"
 #") #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 1"
 #"0 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0)"
 #" #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) "
 #"#(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 "
 #"0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #"
 #"(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0"
 #" 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #("
 #"struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) outline \"black\"))) #(struct:translate 10 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))))))))))) #("
 #"struct:translate 0 10 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #" 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 "
 #"0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0"
 #" 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 "
 #"0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 "
 #"0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0"
 #" 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))))))))"
 #"))) #(struct:translate 0 10 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))"
 #"))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 1"
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0"
 #" 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))"
 #"))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tran"
 #"slate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:trans"
 #"late 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transla"
 #"te 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translat"
 #"e 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"bla"
 #"ck\"))))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) o"
 #"utline \"black\"))) #(struct:translate 10 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct"
 #":pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) ou"
 #"tline \"black\"))) #(struct:translate 10 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:"
 #"pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) out"
 #"line \"black\"))) #(struct:translate 10 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outl"
 #"ine \"black\"))) #(struct:translate 10 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outli"
 #"ne \"black\"))) #(struct:translate 10 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pul"
 #"led-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outlin"
 #"e \"black\"))) #(struct:translate 10 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline \"black\"))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 80 0) #(struct:point 80 180) #(struct:poi"
 #"nt 0 180)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 80 0 0 0) #(struct:pulled-po"
 #"int 0 0 80 180 0 0) #(struct:pulled-point 0 0 0 180 0 0)) outline #("
 #"struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 80 0 0 0) #(struct:pulled-point 0 "
 #"0 80 180 0 0) #(struct:pulled-point 0 0 0 180 0 0)) 255 \"white\")))"
 #"))))))))))) #(struct:bb 80 180 180) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-ballons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 7 #"())))) "
0 6           4 21 40578
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 80 0) #(struct:po"
 #"int 80 180) #(struct:point 0 180)) #(struct:translate -5 -5 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 5 5 #(struct:elli"
 #"pse 10 10 0 255 \"red\"))) #(struct:translate 5 5 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 80 0) #(struct:point 80 180) #(struc"
 #"t:point 0 180)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 15 15 #(struct:translate 5 5 #(struct:ellipse 10 10 0 255 \"r"
 #"ed\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 80 0) #(struct:point 80 180) #(struct:point 0 180)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 35 35 #(stru"
 #"ct:translate 5 5 #(struct:ellipse 10 10 0 255 \"red\"))) #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 80 0) "
 #"#(struct:point 80 180) #(struct:point 0 180)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tra"
 #"nslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tran"
 #"slate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:trans"
 #"late 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transla"
 #"te 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translat"
 #"e 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"bl"
 #"ack\"))))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(stru"
 #"ct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struc"
 #"t:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0"
 #") #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct"
 #":translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:"
 #"translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:t"
 #"ranslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tr"
 #"anslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tra"
 #"nslate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pul"
 #"led-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outlin"
 #"e \"black\"))))))))))))))))) #(struct:translate 0 10 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) "
 #"#(struct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10"
 #" 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #"
 #"(struct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #("
 #"struct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 1"
 #"0 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(s"
 #"truct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(st"
 #"ruct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 "
 #"0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(str"
 #"uct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(stru"
 #"ct:translate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"outline \"black\"))))))))))))))))) #(struct:translate 0 10 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point"
 #" 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black"
 #"\"))) #(struct:translate 10 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point "
 #"0 0 10 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #" 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))))"
 #"))))))) #(struct:translate 0 10 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))"
 #"))))))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transla"
 #"te 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translat"
 #"e 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 1"
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point"
 #" 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black"
 #"\"))))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:"
 #"translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:t"
 #"ranslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tr"
 #"anslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tra"
 #"nslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tran"
 #"slate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:trans"
 #"late 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled"
 #"-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))))))))))))))))) #(struct"
 #":translate 0 10 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0"
 #" 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 "
 #"0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 "
 #"10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0"
 #") #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 1"
 #"0 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0)"
 #" #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) "
 #"#(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 "
 #"0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #"
 #"(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0"
 #" 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #("
 #"struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) outline \"black\"))) #(struct:translate 10 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))))))))))) #("
 #"struct:translate 0 10 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #" 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 "
 #"0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0"
 #" 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 "
 #"0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 "
 #"0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0"
 #" 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))))))))"
 #"))) #(struct:translate 0 10 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))))))))"
 #"))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 1"
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0"
 #" 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))"
 #"))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tran"
 #"slate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:trans"
 #"late 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transla"
 #"te 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translat"
 #"e 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"bla"
 #"ck\"))))))))))))))))) #(struct:translate 0 10 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struc"
 #"t:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0"
 #") #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct"
 #":translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:"
 #"translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:t"
 #"ranslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tr"
 #"anslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tra"
 #"nslate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:tran"
 #"slate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline"
 #" \"black\"))))))))))))))))) #(struct:translate 0 10 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10"
 #" 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #"
 #"(struct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #("
 #"struct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 1"
 #"0 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(s"
 #"truct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(st"
 #"ruct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 "
 #"0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(str"
 #"uct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(stru"
 #"ct:translate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struc"
 #"t:translate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) o"
 #"utline \"black\"))))))))))))))))) #(struct:translate 0 10 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point "
 #"0 0 10 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #" 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 "
 #"0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\")))))))))))"
 #")))))) #(struct:translate 0 10 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10"
 #" 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black\")))))"
 #")))))))))))) #(struct:translate 0 10 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transla"
 #"te 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translat"
 #"e 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 1"
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point "
 #"0 0 10 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline \"black\"))))))))))))))))) #(struct:trans"
 #"late 0 10 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transl"
 #"ate 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:transla"
 #"te 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translat"
 #"e 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate"
 #" 10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate "
 #"10 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 1"
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) outline \"black\"))) #(struct:translate 10"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point"
 #" 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline \"black"
 #"\"))))))))))))))))))))))))))))))))))))))))))))))))))) #(struct:trans"
 #"late 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 80 0) #(s"
 #"truct:point 80 180) #(struct:point 0 180)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 80 0 0 0) #(struct:pulled-point 0 0 80 180 0 0) #(struct:pulled-"
 #"point 0 0 0 180 0 0)) outline #(struct:pen \"black\" 2 solid round r"
 #"ound)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 80"
 #" 0 0 0) #(struct:pulled-point 0 0 80 180 0 0) #(struct:pulled-point "
 #"0 0 0 180 0 0)) 255 \"white\")))))))))))))))))))))) #(struct:bb 80 1"
 #"80 180) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-ballons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 5 #"SCENE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; List-of-posn -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #"; Produces an image of the lecture hall with red dots added at the s"
 #"pecified Posn"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-ballons"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 2 #") "
0 0 14 3 5 #"SCENE"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 31 #"\"x coordinate is out of bounds\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 31 #"\"y coordinate is out of bounds\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 7 #"RED-DOT"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 3 #")) "
0 0 14 3 5 #"SCENE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 7 #"RED-DOT"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"add-ballons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"pair"
0 0 24 3 2 #" ["
0 0 14 3 7 #"ballon#"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; A Pair is a structure (make-pair N List-of-posns)"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; A List-of-posn is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - '()"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; - (cons Posn List-of-posns)"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; interpretation (make-pair n lob) means n ballons"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; must yet be thrown and added to lob"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-ballons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-pair"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-ballons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-pair"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Pair -> Pair"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; Create a random ballon"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-ballons"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"pair-ballon#"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"p"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"make-pair"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"pair-ballon#"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLASSROOM"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"pair-lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"print-ballons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 7 #"RED-DOT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; Pair -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; Print a ballon Pair in the grid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"print-ballons"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-ballons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pair-lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"riot"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"main"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 14 #"create-ballons"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 13 #"print-ballons"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0           0
